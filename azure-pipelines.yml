# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
  - stage: Build

    jobs:
    - job : 
      displayName: Build
      steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '14.x'
        displayName: 'Install Node.js'

      - script: |
          npm install -g @angular/cli
          npm install
          ng build --output-path $(Build.ArtifactStagingDirectory)/dist
        displayName: 'npm install and build'

      - task: CopyFiles@2
        displayName: "Copy Dockerfile into artifact"
        inputs:
          Contents: 'Dockerfile'
          TargetFolder: '$(Build.ArtifactStagingDirectory)'

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'drop'
          publishLocation: 'Container'

  - stage: PublishDocker
    displayName: Publish to Docker
    
    jobs:
    - deployment:
      displayName: Publish to Docker
      environment: Production
    
      variables:
        - group: docker-settings
      
      strategy:
          runOnce:
              deploy:
                  steps:

                  - task: Docker@2
                    displayName: "Build and publish container"
                    inputs:
                      containerRegistry: 'DockerHub'
                      repository: 'jannotjarks/e-paper-frontend'
                      command: 'buildAndPush'
                      Dockerfile: '/home/vsts/work/1/drop/Dockerfile'
                      tags: |
                        $(Build.BuildId)
                        latest

  - stage: Deployment
    jobs:
      - deployment: DeploymentDocker
        displayName: Deployment of Docker Container
        environment: Production
        
        strategy:
            runOnce:
                deploy:
                    steps:
                    - task: SSH@0
                      displayName: 'Stops and removes running Docker Container with the image'
                      inputs:
                        sshEndpoint: 'root@docker.jtjarks.de'
                        commands: '/root/remove-docker-container-by-image.sh jannotjarks/e-paper-frontend:latest'

                    - task: SSH@0
                      displayName: 'Refresh Docker Container on docker.jtjarks.de'
                      inputs:
                        sshEndpoint: 'root@docker.jtjarks.de'
                        commands: | 
                          docker pull jannotjarks/e-paper-frontend:latest
                          docker run -p 8081:80 -d --restart always jannotjarks/e-paper-frontend:latest